{"version":3,"file":"static/js/670.0f6360fa.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contax/selectors.js","components/Button.js","components/Form.jsx","components/Filter/Filter.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"TaskList\":\"ContactList_TaskList__ASd5b\",\"TaskList_item\":\"ContactList_TaskList_item__pjGNc\",\"completed\":\"ContactList_completed__lxu0h\",\"TaskList_text\":\"ContactList_TaskList_text__YPKCU\",\"TaskList_actions\":\"ContactList_TaskList_actions__AyR6L\",\"TaskList_button\":\"ContactList_TaskList_button__friUZ\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectLoading = state => state.tasks.loading;\n\nconst getArrContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [getArrContacts, selectFilter],\n  (contacts, filterWord) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterWord.toLowerCase())\n    );\n  }\n);\n","export const Button = () => {\nreturn (<>\n<button\n    type = \"submit\">\n        Add contact\n</button>\n</>)\n}","import { Button } from './Button';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../redux/contax/selectors';\nimport { addContact } from '../redux/contax/operations';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const handleInput = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleNumber = evt => {\n    const stringNumber = evt.target.value;\n    setNumber(stringNumber);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchSameName = items.some(\n      cont => cont.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (searchSameName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label\n        style={{\n          display: 'flex',\n        }}\n      >\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInput}\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleNumber}\n        />\n        <br />\n      </label>\n      <Button />\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from '../../redux/contax/filtersSlice';\nimport { selectFilter } from '../../redux/contax/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </div>\n  );\n};\n\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contax/operations';\nimport styles from '../ContactList/ContactList.module.css';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      {name + ':' + number}\n      {\n        <button\n          className={styles.TaskList_button}\n          type=\"button\"\n          name=\"delete\"\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n      }\n    </div>\n  );\n};\n","import styles from './ContactList.module.css';\nimport { useEffect } from 'react';\nimport {\n  useSelector,\n  useDispatch\n} from 'react-redux';\nimport { fetchContacts } from '../../redux/contax/operations';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from '../../redux/contax/selectors';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Form } from '../Form';\nimport { Filter } from '../Filter/Filter';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nconst ContactList = () => {\n \n  const {\n    // items,\n    isLoading,\n    error,\n  } = useSelector(selectContacts);\n  const getVisibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // console.log(dispatch);\n  }, [dispatch]);\n\n  // console.log(getVisibleContacts);\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'block',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <HelmetProvider>\n        <div>\n          <Helmet>\n            <title>Your contacts</title>\n          </Helmet>\n          <h1>Phonebook</h1>\n        </div>\n      </HelmetProvider>\n      {<Form />}\n      <h2>Contacts</h2>\n      {<Filter />}\n\n      {\n        <div>\n          {isLoading && <p>Loading contacts...</p>}\n          {error && <p>{error}</p>}\n          {getVisibleContacts.length > 0 && (\n            <ul className={styles.TaskList}>\n              <>\n                {getVisibleContacts.map(({ id, name, number }) => (\n                  <li className={styles.TaskList_item} key={id}>\n                    {/* <div>{isLoading && 'Request in progress...'}</div> */}\n                    <ContactItem id={id} name={name} number={number} />\n                  </li>\n                ))}\n              </>\n            </ul>\n          )}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ContactList;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectFilter","filter","selectVisibleContacts","items","filterWord","contact","toLowerCase","includes","Button","_jsx","_Fragment","children","type","Form","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","reset","_jsxs","onSubmit","evt","preventDefault","some","cont","alert","addContact","style","display","pattern","title","required","onChange","target","stringNumber","Filter","e","setFilter","ContactItem","_ref","id","className","styles","onClick","deleteContact","_useSelector","isLoading","error","getVisibleContacts","useEffect","fetchContacts","height","justifyContent","alignItems","fontSize","color","HelmetProvider","Helmet"],"sourceRoot":""}